# Imports the Google Cloud client library
from google.cloud import language
from google.cloud.language import enums
from google.cloud.language import types

# Instantiates a client
client = language.LanguageServiceClient()

# The text to analyze
text = u'The Golden Gate Bridge is in Bell High School. It is a cool bridge'
document = types.Document(
    content=text,
    type=enums.Document.Type.PLAIN_TEXT)

# Detects the sentiment of the text
sentiment = client.analyze_sentiment(document=document).document_sentiment
entities = client.analyze_entities(document).entities

print('Text: {}'.format(text))
print('Sentiment: {}, {}'.format(sentiment.score, sentiment.magnitude, ))

entity_type = ('UNKNOWN', 'PERSON', 'LOCATION', 'ORGANIZATION', 'EVENT', 'WORK_OF_ART', 'CONSUMER_GOOD', 'OTHER')

# for entity in entities:
# 	print(u'{:<16}: {}'.format('name', entity.name))
# 	print(u'{:<16}: {}'.format('type', entity_type[entity.type]))
# 	print(u'{:<16}: {}'.format('metadata', entity.metadata))
# 	print(u'{:<16}: {}'.format('salience', entity.salience))
# 	print(u'{:<16}: {}'.format('wikipedia_url', entity.metadata.get('wikipedia_url', '-')))

tokens = client.analyze_syntax(document).tokens

# part-of-speech tags from enums.PartOfSpeech.Tag
pos_tag = ('UNKNOWN', 'ADJ', 'ADP', 'ADV', 'CONJ', 'DET', 'NOUN', 'NUM', 'PRON', 'PRT', 'PUNCT', 'VERB', 'X', 'AFFIX')

for token in tokens:
	print(u'{}'.format(token))
# 	print(u'{}: {}'.format(pos_tag[token.part_of_speech.tag], token.text.content))

result = client.analyze_entity_sentiment(document)

# for entity in result.entities:
# 	print('Mentions: ')
# 	print(u'Name: "{}"'.format(entity.name))
# 	for mention in entity.mentions:
# 		print(u'  Begin Offset : {}'.format(mention.text.begin_offset))
# 		print(u'  Content : {}'.format(mention.text.content))
# 		print(u'  Magnitude : {}'.format(mention.sentiment.magnitude))
# 		print(u'  Sentiment : {}'.format(mention.sentiment.score))
# 		print(u'  Type : {}'.format(mention.type))
# 	print(u'Salience: {}'.format(entity.salience))
# 	print(u'Sentiment: {}\n'.format(entity.sentiment))

# categories = client.classify_text(document).categories

# for category in categories:
# 	print(u'=' * 20)
# 	print(u'{:<16}: {}'.format('name', category.name))
# 	print(u'{:<16}: {}'.format('confidence', category.confidence))